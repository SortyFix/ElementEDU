package de.gaz.eedu.user.privileges;

import com.fasterxml.jackson.annotation.JsonBackReference;
import de.gaz.eedu.user.group.GroupEntity;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.Table;
import lombok.AccessLevel;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.util.Objects;
import java.util.Set;

@Entity
@Getter
@AllArgsConstructor
@NoArgsConstructor
@Setter
@Table(name = "privilege_entity")
public class PrivilegeEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Setter(AccessLevel.NONE) // ID is final
    private Long id;
    private String name;
    @JsonBackReference
    @ManyToMany(mappedBy = "privileges")
    private Set<GroupEntity> groupEntities;

    @Override public String toString()
    { // Automatically generated by IntelliJ
        return "PrivilegeEntity{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", groupEntities=" + groupEntities +
                '}';
    }

    @Override public boolean equals(Object object)
    { // Automatically generated by IntelliJ
        if (this == object) {return true;}
        if (object == null || getClass() != object.getClass()) {return false;}
        PrivilegeEntity that = (PrivilegeEntity) object;
        return Objects.equals(getId(), that.getId());
    }

    @Override public int hashCode()
    { // Automatically generated by IntelliJ
        return Objects.hash(getId());
    }
}
