package de.gaz.eedu.user.verification.credentials.model;

import de.gaz.eedu.entity.model.CreationModel;
import de.gaz.eedu.user.verification.credentials.CredentialEntity;
import de.gaz.eedu.user.verification.credentials.implementations.CredentialMethod;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.util.Objects;

public record CredentialCreateModel(
        @NotNull Long userID,
        @NotNull CredentialMethod method,
        @Nullable Integer temporary,
        @Nullable String data
) implements CreationModel<Long, CredentialEntity>
{

    public CredentialCreateModel(long userId, @NotNull UndefinedCredentialCreateModel model)
    {
        this(userId, model.method(), null, model.data());
    }

    public CredentialCreateModel(long userId, @NotNull TemporaryCredentialCreateModel model)
    {
        this(userId, model.method(), model.bitMask(), model.data());
    }

    @Override public @NotNull CredentialEntity toEntity(@NotNull CredentialEntity entity)
    {
        entity.setEnabled(false);
        entity.setData(data());
        entity.setMethod(method());
        return entity;
    }

    @Contract(pure = true) @Override public @NotNull String toString()
    { // Automatically generated by IntelliJ
        return "CredentialCreateModel{" +
                "userID=" + userID +
                ", method=" + method +
                ", temporary=" + temporary +
                ", data='" + data + '\'' +
                '}';
    }

    @Override public boolean equals(Object o)
    { // Automatically generated by IntelliJ
        if (o == null || getClass() != o.getClass()) {return false;}
        CredentialCreateModel that = (CredentialCreateModel) o;
        return Objects.equals(userID, that.userID) && Objects.equals(
                data,
                that.data) && Objects.equals(temporary, that.temporary) && method == that.method;
    }

    @Override public int hashCode()
    { // Automatically generated by IntelliJ
        return Objects.hash(userID, method, temporary, data);
    }
}
