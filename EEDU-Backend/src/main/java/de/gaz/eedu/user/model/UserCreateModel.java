package de.gaz.eedu.user.model;

import de.gaz.eedu.entity.model.CreationModel;
import de.gaz.eedu.user.AccountType;
import de.gaz.eedu.user.UserEntity;
import de.gaz.eedu.user.UserStatus;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;

import java.util.Arrays;
import java.util.Objects;

public record UserCreateModel(
        @NotNull String firstName,
        @NotNull String lastName,
        @NotNull String loginName,
        @NotNull AccountType accountType,
        @NotNull Boolean enabled,
        @NotNull Boolean locked,
        @NotNull UserStatus status,
        @NotNull Long theme,
        @NotNull String[] groups
) implements CreationModel<Long, UserEntity> {

    @Override public @NotNull UserEntity toEntity(@NotNull UserEntity userEntity)
    {
        userEntity.setFirstName(firstName());
        userEntity.setLastName(lastName());
        userEntity.setLoginName(loginName());
        userEntity.setAccountType(accountType());
        userEntity.setEnabled(enabled());
        userEntity.setLocked(locked());
        userEntity.setStatus(status());
        userEntity.setSystemAccount(loginName().equals("root"));
        return userEntity;
    }

    @Contract(pure = true) @Override public @NotNull String toString()
    { // Automatically generated by IntelliJ
        return "UserCreateModel{" +
                "firstName='" + firstName + '\'' +
                ", lastName='" + lastName + '\'' +
                ", loginName='" + loginName + '\'' +
                ", accountType=" + accountType +
                ", enabled=" + enabled +
                ", locked=" + locked +
                ", status=" + status +
                ", theme=" + theme +
                ", groups=" + Arrays.toString(groups) +
                '}';
    }

    @Override public boolean equals(Object o)
    { // Automatically generated by IntelliJ
        if (o == null || getClass() != o.getClass()) {return false;}
        UserCreateModel that = (UserCreateModel) o;
        return Objects.equals(theme, that.theme) && Objects.deepEquals(
                groups,
                that.groups) && Objects.equals(locked, that.locked) && Objects.equals(
                lastName,
                that.lastName) && Objects.equals(enabled, that.enabled) && Objects.equals(
                firstName,
                that.firstName) && Objects.equals(
                loginName,
                that.loginName) && status == that.status && accountType == that.accountType;
    }

    @Override public int hashCode()
    { // Automatically generated by IntelliJ
        return Objects.hash(
                firstName,
                lastName,
                loginName,
                accountType,
                enabled,
                locked,
                status,
                theme,
                Arrays.hashCode(groups));
    }
}
