package de.gaz.eedu.user.privileges.model;

import de.gaz.eedu.entity.model.Model;
import de.gaz.eedu.user.group.model.SimplePrivilegeGroupModel;
import de.gaz.eedu.user.privileges.PrivilegeEntity;
import de.gaz.eedu.user.privileges.PrivilegeService;
import jakarta.validation.constraints.NotEmpty;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;

import java.util.Objects;
import java.util.Set;

/**
 * This represents a {@link PrivilegeEntity}.
 * <p>
 * This model exists to effectively create a json friendly
 * object which can be easily ported into a {@link PrivilegeEntity}.
 * It simplifies the workflow when using the rest api.
 * <p>
 * Note that the only way to interact with this is by using the {@link PrivilegeService}.
 * It provides all the necessary methods to create and edit privileges.
 *
 * @param id
 * @param name
 * @author ivo
 * @see PrivilegeService
 */
public record PrivilegeModel(
        @NotNull Long id,
        @NotEmpty(message = "Name must be not empty.") @NotNull String name,
        @NotNull Set<SimplePrivilegeGroupModel> groups) implements Model
{

    @Contract(pure = true)
    @Override public @NotNull String toString()
    { // Automatically generated by IntelliJ
        return "PrivilegeModel{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", groups=" + groups +
                '}';
    }

    @Override
    public boolean equals(Object object)
    { // Automatically generated by IntelliJ
        if (this == object) {return true;}
        if (object == null || getClass() != object.getClass()) {return false;}
        PrivilegeModel that = (PrivilegeModel) object;
        return Objects.equals(id, that.id);
    }

    @Override
    public int hashCode()
    { // Automatically generated by IntelliJ
        return Objects.hash(id);
    }
}
