package de.gaz.eedu.user.privileges.model;

import de.gaz.eedu.entity.model.EntityModel;
import de.gaz.eedu.user.privileges.PrivilegeEntity;
import de.gaz.eedu.user.privileges.PrivilegeService;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;

import java.util.Objects;

/**
 * This represents a {@link PrivilegeEntity}.
 * <p>
 * This model exists to effectively create a json friendly
 * object which can be easily ported into a {@link PrivilegeEntity}.
 * It simplifies the workflow when using the rest api.
 * <p>
 * Note that the only way to interact with this is by using the {@link PrivilegeService}.
 * It provides all the necessary methods to create and edit privileges.
 *
 * @param id
 * @author ivo
 * @see PrivilegeService
 */
public record PrivilegeModel(@NotNull String id) implements EntityModel<String>
{
    @Contract(pure = true) @Override public @NotNull String toString()
    { // Automatically generated by IntelliJ
        return "PrivilegeModel{" +
                "id='" + id + '\'' +
                '}';
    }

    @Override public boolean equals(Object o)
    { // Automatically generated by IntelliJ
        if (o == null || getClass() != o.getClass()) {return false;}
        PrivilegeModel that = (PrivilegeModel) o;
        return Objects.equals(id, that.id);
    }

    @Override public int hashCode()
    { // Automatically generated by IntelliJ
        return Objects.hashCode(id);
    }
}
