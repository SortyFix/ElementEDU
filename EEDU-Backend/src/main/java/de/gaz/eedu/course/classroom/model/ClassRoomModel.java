package de.gaz.eedu.course.classroom.model;

import de.gaz.eedu.course.model.CourseModel;
import de.gaz.eedu.entity.model.EntityModel;
import de.gaz.eedu.user.model.UserModel;
import lombok.NonNull;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;

import java.util.Arrays;
import java.util.Objects;

public record ClassRoomModel(
        @NonNull Long id,
        @NonNull String name,
        @NonNull UserModel[] users,
        @NonNull CourseModel[] courses
) implements EntityModel<Long> {

    @Contract(pure = true)
    @Override
    public @NotNull String toString()
    { // Automatically generated by IntelliJ
        return "ClassModel{" + "id=" + id + ", name='" + name + '\'' + ", users=" + Arrays.toString(users) + ", courses=" + Arrays.toString(
                courses) + '}';
    }

    @Override
    public boolean equals(Object o)
    { // Automatically generated by IntelliJ
        if (this == o) { return true; }
        if (o == null || getClass() != o.getClass()) { return false; }
        ClassRoomModel that = (ClassRoomModel) o;
        return Objects.equals(id, that.id) && Objects.equals(name, that.name) && Objects.deepEquals(users,
                that.users) && Objects.deepEquals(courses, that.courses);
    }

    @Override
    public int hashCode()
    { // Automatically generated by IntelliJ
        return Objects.hash(id, name, Arrays.hashCode(users), Arrays.hashCode(courses));
    }
}
