package de.gaz.eedu.course.room;

import com.fasterxml.jackson.annotation.JsonBackReference;
import de.gaz.eedu.course.appointment.entry.AppointmentEntryEntity;
import de.gaz.eedu.course.appointment.frequent.FrequentAppointmentEntity;
import de.gaz.eedu.course.room.model.RoomModel;
import de.gaz.eedu.entity.model.EntityModelRelation;
import jakarta.persistence.*;
import lombok.AccessLevel;
import lombok.Getter;
import lombok.Setter;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

@Getter
@Setter
@Entity
public class RoomEntity implements EntityModelRelation<Long, RoomModel>
{
    @Setter(AccessLevel.NONE)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Id private long id;

    @JsonBackReference @OneToMany(mappedBy = "room", fetch = FetchType.LAZY)
    private final Set<AppointmentEntryEntity> appointments = new HashSet<>();
    @JsonBackReference @OneToMany(mappedBy = "room", fetch = FetchType.LAZY)
    private final Set<FrequentAppointmentEntity> frequentAppointments = new HashSet<>();

    @Column(length = 20, nullable = false) @Basic(optional = false, fetch = FetchType.EAGER) private String name;

    @Contract(pure = true, value = "-> new")
    @Override public @NotNull RoomModel toModel()
    {
        return new RoomModel(getId(), getName());
    }

    @Contract(pure = true, value = "-> new") @Override public String toString()
    { // Automatically generated by IntelliJ
        return "RoomEntity{" + "id=" + id + ", name='" + name + '\'' + '}';
    }

    @Override public boolean equals(Object o)
    { // Automatically generated by IntelliJ
        if (o == null || getClass() != o.getClass()) {return false;}
        RoomEntity that = (RoomEntity) o;
        return id == that.id;
    }

    @Override public int hashCode()
    { // Automatically generated by IntelliJ
        return Objects.hashCode(id);
    }
}
