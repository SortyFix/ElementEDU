package de.gaz.eedu.course.room;

import com.fasterxml.jackson.annotation.JsonBackReference;
import de.gaz.eedu.course.appointment.entry.AppointmentEntryEntity;
import de.gaz.eedu.course.appointment.frequent.FrequentAppointmentEntity;
import de.gaz.eedu.course.room.model.RoomModel;
import de.gaz.eedu.entity.model.EntityModelRelation;
import jakarta.persistence.*;
import lombok.*;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

/**
 * Represents a room entity within the system. Rooms define specific physical rooms that can be used by other components.
 * Each room is identified by a {@link String} id which is the primary key. It is persisted in the "room_entity" database table.
 * <p>
 * Rooms are associated with {@link AppointmentEntryEntity} through a one-to-many relationship. A room can be set to
 * multiple appointments, and an appointment can only have one room. This relationship is managed by the database join table implicitly
 * defined by the {@link OneToMany} annotation and the {@code appointments} field.
 * <p>
 * Rooms are associated with {@link FrequentAppointmentEntity} through a one-to-many relationship. A room can be set to
 * multiple frequent appointments, and a frequent appointment can only have one room. This relationship is managed by the
 * database join table implicitly defined by the {@link OneToMany} annotation and the {@code frequentAppointments} field.
 * <p>
 * This entity implements the {@link EntityModelRelation} interface, enabling conversion to and from the corresponding
 * {@link RoomModel} for use when communicating with the frontend. This allows for a clean separation between the
 * persistence model (this entity) and the frontend model (the {@link RoomModel}).
 *
 * @see AppointmentEntryEntity
 * @see FrequentAppointmentEntity
 * @see EntityModelRelation
 * @see RoomModel
 *
 * @author Ivo Quiring
 */
@Entity @Getter @Setter
@AllArgsConstructor @NoArgsConstructor
public class RoomEntity implements EntityModelRelation<String, RoomModel>
{
    @JsonBackReference @OneToMany(mappedBy = "room", fetch = FetchType.LAZY)
    private final Set<AppointmentEntryEntity> appointments = new HashSet<>();
    @JsonBackReference @OneToMany(mappedBy = "room", fetch = FetchType.LAZY)
    private final Set<FrequentAppointmentEntity> frequentAppointments = new HashSet<>();
    @Id @Column(length = 20, nullable = false) @Setter(AccessLevel.NONE) private String id;

    @Contract(pure = true, value = "-> new")
    @Override public @NotNull RoomModel toModel()
    {
        return new RoomModel(getId());
    }

    @Contract(pure = true)
    @Override public String toString()
    { // Automatically generated by IntelliJ
        return "RoomEntity{" +
                "id='" + id + '\'' +
                '}';
    }

    @Override public boolean equals(Object o)
    { // Automatically generated by IntelliJ
        if (o == null || getClass() != o.getClass()) {return false;}
        RoomEntity that = (RoomEntity) o;
        return Objects.equals(id, that.id);
    }

    @Override public int hashCode()
    { // Automatically generated by IntelliJ
        return Objects.hashCode(id);
    }
}
