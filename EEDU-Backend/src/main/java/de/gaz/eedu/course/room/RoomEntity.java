package de.gaz.eedu.course.room;

import com.fasterxml.jackson.annotation.JsonBackReference;
import de.gaz.eedu.course.appointment.entry.AppointmentEntryEntity;
import de.gaz.eedu.course.appointment.frequent.FrequentAppointmentEntity;
import de.gaz.eedu.course.room.model.RoomModel;
import de.gaz.eedu.entity.model.EntityModelRelation;
import jakarta.persistence.*;
import lombok.*;
import org.jetbrains.annotations.Contract;
import org.jetbrains.annotations.NotNull;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

@Entity @Getter @Setter
@AllArgsConstructor @NoArgsConstructor
public class RoomEntity implements EntityModelRelation<String, RoomModel>
{
    @Id @Column(length = 20, nullable = false) @Setter(AccessLevel.NONE) private String id;

    @JsonBackReference @OneToMany(mappedBy = "room", fetch = FetchType.LAZY)
    private final Set<AppointmentEntryEntity> appointments = new HashSet<>();
    @JsonBackReference @OneToMany(mappedBy = "room", fetch = FetchType.LAZY)
    private final Set<FrequentAppointmentEntity> frequentAppointments = new HashSet<>();

    @Contract(pure = true, value = "-> new")
    @Override public @NotNull RoomModel toModel()
    {
        return new RoomModel(getId());
    }

    @Contract(pure = true)
    @Override public String toString()
    { // Automatically generated by IntelliJ
        return "RoomEntity{" +
                "id='" + id + '\'' +
                '}';
    }

    @Override public boolean equals(Object o)
    { // Automatically generated by IntelliJ
        if (o == null || getClass() != o.getClass()) {return false;}
        RoomEntity that = (RoomEntity) o;
        return Objects.equals(id, that.id);
    }

    @Override public int hashCode()
    { // Automatically generated by IntelliJ
        return Objects.hashCode(id);
    }
}
